FROM jupyter/scipy-notebook
#FROM ubuntu:xenial-20180228@sha256:e348fbbea0e0a0e73ab0370de151e7800684445c509d46195aef73e090a49bd6
#FROM jupyter/minimal-notebook
#FROM gcr.io/tensorflow/tensorflow:latest

ARG KERAS_VERSION=2.1.5
ARG TENSORFLOW_VERSION=1.7.0
ARG TENSORFLOW_ARCH=cpu

ENV PASSWORD ''

LABEL maintainer="Olivier Nguyen <nguyenolive@gmail.com>"

USER root

### install more system packages, e.g.
#RUN apt-get update && apt-get install -y --no-install-recommends \
#	git

#RUN  \
#  pip install -U nltk \
#  tqdm \
#	seaborn

RUN	\
	pip install git+https://github.com/erikavaris/tokenizer.git


RUN conda install --quiet --yes \
	'tensorflow=1.7.0' 

# Install Keras
RUN pip --no-cache-dir install git+git://github.com/fchollet/keras.git@${KERAS_VERSION}

# Install TensorFlow
#RUN pip --no-cache-dir install \
#	https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl


###
### this copies in files from current directory to /notebooks 
### to the running container, so that you can access them
### container
###
# Set up our notebook config.
COPY jupyter_notebook_config.py /root/.jupyter/
#COPY conf/.jupyter /root/.jupyter

RUN ["mkdir", "pass"]
COPY . /pass

COPY run_jupyter.sh /

# Jupyter ports
EXPOSE 8888 6006

###
### start up the server
###
WORKDIR /pass/notebooks

CMD ["/run_jupyter.sh", "--allow-root"]
#CMD ["/run_jupyter.sh"]


###
### use it like this.  we'll call the image and container "pass"
###
#docker build -t pass .
#docker run -p 127.0.0.1:8888:8888 --name pass -t pass
#docker stop pass
#docker rm pass

###
### I like to put these all on one line so I can iterate on
### edits to my Dockerfile
###
#docker stop pass; docker rm pass; docker build -t pass .; docker run -p 8889:8888 -v $(pwd)/notebooks:/notebooks --name pass -t pass
